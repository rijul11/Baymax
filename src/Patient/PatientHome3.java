/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Patient;

import Main.Connector;
import Main.Main;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class PatientHome3 extends javax.swing.JFrame {

    /**
     * Creates new form PatientHome
     */
    
    PreparedStatement ps = null;
    ResultSet rs = null;
    Connection connection = null;
    public String sendName;
    String findName;
    DefaultTableModel defaultTableModel = new DefaultTableModel();
    DefaultTableModel defaultTableModel1 = new DefaultTableModel();
    DefaultTableModel defaultTableModel2 = new DefaultTableModel();
    DefaultTableModel defaultTableModel3 = new DefaultTableModel();
  
   // private Object jTablel1;
    
    public PatientHome3() {
        initComponents();
    }
     public PatientHome3(String user) {
        initComponents();
        ImageIcon ic = new ImageIcon(getClass().getResource("/Images/hospital.png"));
        this.setIconImage(ic.getImage());
        findName = user;
        Object columns[] = {"PID","Field" ,"Symptom 1", "Symptom 2", "Symptom 3", "Other","Status" };
        defaultTableModel.setColumnIdentifiers(columns);
        jTable1.setModel(defaultTableModel);
        FillCombo();
        
     }
    public void FillCombo()
    {
        connection = Connector.ConnectDb();
        try
        {
         String sql="select field from doctor ";
         ps=connection.prepareStatement(sql);
         System.out.println(sql);
         rs=ps.executeQuery(sql);
         
            while(rs.next())
            {
             String c1=rs.getString("field");
             jField.addItem(c1);
            }
            
            jField.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent event){
                    String field=jField.getSelectedItem().toString();
                    
                try{
                    Statement stmt2=null;
                    String query2 = "SELECT symptom FROM field_symptom where field='"+field+"';";
                    stmt2 = connection.createStatement();
                    ResultSet rs2 = stmt2.executeQuery(query2);
                    jSymptom1.removeAllItems();
                    jSymptom2.removeAllItems();
                    jSymptom3.removeAllItems();
                    while(rs2.next()) {
                        jSymptom1.addItem(rs2.getString(1));
                        jSymptom2.addItem(rs2.getString(1));
                        jSymptom3.addItem(rs2.getString(1));
                    }
                }
                catch (SQLException ex1) {JOptionPane.showMessageDialog(null,"Failed to Item-List..!"); ex1.printStackTrace(); return;}
            }
         });
           
         
        }    
        catch(Exception e)
        {
         JOptionPane.showMessageDialog(null,"uggh");   
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSymptom1 = new javax.swing.JComboBox();
        jSymptom2 = new javax.swing.JComboBox();
        jSymptom3 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jOther = new javax.swing.JTextArea();
        insert_into_table = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        combo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jField = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Symptom 1 :");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 110, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Symptom 2 :");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 110, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Symptom 3:");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 110, 30));

        jSymptom1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-nil-" }));
        jSymptom1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSymptom1ActionPerformed(evt);
            }
        });
        getContentPane().add(jSymptom1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 270, 30));

        jSymptom2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-nil-" }));
        jSymptom2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSymptom2ActionPerformed(evt);
            }
        });
        getContentPane().add(jSymptom2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 270, 30));

        jSymptom3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-nil-" }));
        getContentPane().add(jSymptom3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 270, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText(" Other (Mention Allergies if any ) :");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 270, 30));

        jOther.setColumns(20);
        jOther.setRows(5);
        jScrollPane1.setViewportView(jOther);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 270, 50));

        insert_into_table.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        insert_into_table.setForeground(new java.awt.Color(0, 102, 102));
        insert_into_table.setText("Add Entry");
        insert_into_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insert_into_tableMouseClicked(evt);
            }
        });
        insert_into_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_into_tableActionPerformed(evt);
            }
        });
        getContentPane().add(insert_into_table, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 170, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 160, 790, 180));

        combo.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        combo.setForeground(new java.awt.Color(0, 102, 102));
        combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- Please Select -", "View History", "View Diagnosis ", "View Doctor Details" }));
        combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboItemStateChanged(evt);
            }
        });
        combo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboMouseClicked(evt);
            }
        });
        getContentPane().add(combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 400, 250, 40));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Field :");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 110, 30));

        jField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-nil-" }));
        jField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jFieldItemStateChanged(evt);
            }
        });
        getContentPane().add(jField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 270, 30));

        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Delete Entry");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, 170, 30));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 490, 1230, 160));

        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 1260, 540));

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Welcome to the Patient Portal !");
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 11, 658, -1));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cross.png"))); // NOI18N
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 10, -1, 50));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 35, 1310, -1));

        bg.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Desktop\\MIT WPU\\Third year\\CN\\project\\signup.jpg")); // NOI18N
        bg.setMaximumSize(new java.awt.Dimension(1300, 700));
        bg.setMinimumSize(new java.awt.Dimension(1300, 700));
        bg.setPreferredSize(new java.awt.Dimension(1300, 700));
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1310, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

       
    private void insert_into_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_into_tableActionPerformed
        // TODO add your handling code here:
           
        
    }//GEN-LAST:event_insert_into_tableActionPerformed

    private void insert_into_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_into_tableMouseClicked
        // TODO add your handling code here:
        connection = Connector.ConnectDb();
        if (connection != null) {
            String field = (String) jField.getSelectedItem();
            String s1 = (String) jSymptom1.getSelectedItem();
            String s2 = (String) jSymptom2.getSelectedItem();
            String s3 = (String) jSymptom3.getSelectedItem();
            String other = jOther.getText();
        int rows = defaultTableModel.getRowCount();
        if(rows>0) {
            for(int i = 0;i<rows;i++)
                defaultTableModel.removeRow(0);
        }           
            try {
            
            String query="insert into symptom values ('"+findName+"','"+field+"','"+s1+"','"+s2+"','"+s3+"','"+other+"','Unresolved',curdate());";
            ps=connection.prepareStatement(query);
            System.out.println(query);
            ps.executeUpdate(query);
            
            String query2="insert ignore into patient_doctor values ('"+findName+"',(select DID from doctor where field = '"+field+"'));";
            ps=connection.prepareStatement(query2);
            System.out.println(query2);
            ps.executeUpdate(query2);
            String sql = "select PID,field,s1,s2,s3,other,status from symptom where PID ='"+findName+"' and status='Unresolved';";
            ps=connection.prepareStatement(sql);
            System.out.println(sql);
            rs=ps.executeQuery();
            Object columnData[] = new Object[7];
            int count=0;
            while (rs.next()) {
                columnData[0] = rs.getString("PID");
                columnData[1] = rs.getString("field");
                columnData[2] = rs.getString("s1");
                columnData[3] = rs.getString("s2");
                columnData[4] = rs.getString("s3");
                columnData[5] = rs.getString("other");
                columnData[6] = rs.getString("status"); 
                defaultTableModel.addRow(columnData);
                count++;
            }
            
            
                
                JOptionPane.showMessageDialog(null, "Data Inserted");
                //loadData();
                //connection.close();
                
                
            }
            
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null,"There seems to be an error");
                
            }
        }   
        
    }//GEN-LAST:event_insert_into_tableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        String cc = (String)jTable1.getValueAt(row,0);
        String ss = (String)jTable1.getValueAt(row,1);
        String a=(String)jTable1.getValueAt(row,2);
        String b = (String)jTable1.getValueAt(row,3);
        String c = (String)jTable1.getValueAt(row,4);
        String d=(String)jTable1.getValueAt(row,5);
        String field = (String) jField.getSelectedItem(); 
        int rows =defaultTableModel.getRowCount();

        connection = Connector.ConnectDb();
        try 
        {
            String sql = "delete from symptom where PID ='"+cc+"' and field ='"+ss+"' and s1='"+a+"' and s2='"+b+"' and s3='"+c+"' and other ='"+d+"';";
            String sql2="delete from patient_doctor where PID='"+cc+"' and DID =(select DID from doctor where field='"+ss+"');";
            ps=connection.prepareStatement(sql);
            ps.executeUpdate(sql);
            System.out.print(sql);
            ps=connection.prepareStatement(sql2);
            ps.executeUpdate(sql2);
            System.out.print(sql2);
            JOptionPane.showMessageDialog(null," REMOVED");
          if(rows>0)
          {
            for(int i=0;i<rows;i++)
            {
                defaultTableModel.removeRow(0);
            }

          }
          
            String sql3 = "select PID,field,s1,s2,s3,other,status from symptom where PID ='"+findName+"'and status='Unresolved';";
            ps=connection.prepareStatement(sql3);
            System.out.print(sql3);
            rs=ps.executeQuery();
            Object columnData2[] = new Object[7];
            int cnt=0;
            while (rs.next()) {
                columnData2[0] = rs.getString("PID");
                columnData2[1] = rs.getString("field");
                columnData2[2] = rs.getString("s1");
                columnData2[3] = rs.getString("s2");
                columnData2[4] = rs.getString("s3");
                columnData2[5] = rs.getString("other");
                columnData2[6] = rs.getString("status");
                defaultTableModel.addRow(columnData2);
                cnt++;
            }
            //connection.close();
        }
            catch(Exception e)
            {
          
                 JOptionPane.showMessageDialog(null," Error"); 
                
            }
    }//GEN-LAST:event_jButton1MouseClicked

    private void comboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboMouseClicked
        // TODO add your handling code here:
    
      
        
    }//GEN-LAST:event_comboMouseClicked

    private void jSymptom1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSymptom1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSymptom1ActionPerformed

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        Main m = new Main();
        m.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel18MouseClicked

    private void jFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jFieldItemStateChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jFieldItemStateChanged

    private void jSymptom2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSymptom2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSymptom2ActionPerformed

    private void comboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboItemStateChanged
        // TODO add your handling code here:
     int val =combo.getSelectedIndex();  
    System.out.println(val);
    if(val==1)
    {
        Object columns2[] = {"PID","Symptom 1", "Symptom 2", "Symptom 3", "Status","Date" };
        defaultTableModel2.setColumnIdentifiers(columns2);
        jTable2.setModel(defaultTableModel2);
        int rows =defaultTableModel2.getRowCount();
            if(rows>0)
            {
                for(int i=0;i<rows;i++)
                    {
                        defaultTableModel2.removeRow(0);
                    }

            }
        connection = Connector.ConnectDb();
        try 
        {      
        
            String sql = "select PID,s1,s2,s3,status,date from symptom where PID='"+findName+"';";
            ps=connection.prepareStatement(sql);
            rs=ps.executeQuery();
            System.out.println(sql);
            Object columnData[] = new Object[6];
            int ct=0;
            while (rs.next()) {
                columnData[0] = rs.getString("PID");
                columnData[1] = rs.getString("s1");
                columnData[2] = rs.getString("s2");
                columnData[3] = rs.getString("s3");
                columnData[4] = rs.getString("status");
                columnData[5] = rs.getString("date");
                defaultTableModel2.addRow(columnData);
                ct++;
            }
        }
        
        catch(Exception e)
            {
          
                 JOptionPane.showMessageDialog(null,"Couldnt display history!"); 
                
            }
        
        
    }
    else if(val==2)
    {
        Object columns2[] = {"PID","DID", "Medicine 1", "Medicine 2", "Medicine 3","Diagnosis","Dosage" };
        defaultTableModel2.setColumnIdentifiers(columns2);
        jTable2.setModel(defaultTableModel2);
        int rows =defaultTableModel2.getRowCount();
            if(rows>0)
            {
                for(int i=0;i<rows;i++)
                    {
                        defaultTableModel2.removeRow(0);
                    }

            }
        connection = Connector.ConnectDb();
        try 
        {      
        
            String sql = "select PID,DID,d1,d2,d3,diagnosis,dosage from prescription where PID='"+findName+"';";
            ps=connection.prepareStatement(sql);
            rs=ps.executeQuery();
            System.out.println(sql);
            Object columnData[] = new Object[7];
            int ct=0;
            while (rs.next()) {
                columnData[0] = rs.getString("PID");
                columnData[1] = rs.getString("DID");
                columnData[2] = rs.getString("d1");
                columnData[3] = rs.getString("d2");
                columnData[4] = rs.getString("d3");
                columnData[5] = rs.getString("diagnosis");
                columnData[6] = rs.getString("dosage");
                defaultTableModel2.addRow(columnData);
                ct++;
            }
        }
        
        catch(Exception e)
            {
          
                 JOptionPane.showMessageDialog(null,"Couldnt display prescriptions !"); 
                
            }
        
        
    }
    else if(val==3)
    {
        Object columns2[] = {"DID","Name", "Experience", "Field", "Mobile" };
        defaultTableModel2.setColumnIdentifiers(columns2);
        jTable2.setModel(defaultTableModel2);
        int rows =defaultTableModel2.getRowCount();
            if(rows>0)
            {
                for(int i=0;i<rows;i++)
                    {
                        defaultTableModel2.removeRow(0);
                    }

            }
        connection = Connector.ConnectDb();
        try 
        {      
        
            String sql = "select DID,name,experience,field,mobile from doctor where DID in (select DID from patient_doctor where PID='"+findName+"');";
            ps=connection.prepareStatement(sql);
            rs=ps.executeQuery();
            System.out.println(sql);
            Object columnData[] = new Object[6];
            int ct=0;
            while (rs.next()) {
                columnData[0] = rs.getString("DID");
                columnData[1] = rs.getString("name");
                columnData[2] = rs.getString("experience");
                columnData[3] = rs.getString("field");
                columnData[4] = rs.getString("mobile");
                
                defaultTableModel2.addRow(columnData);
                ct++;
            }
        }
        
        catch(Exception e)
            {
          
                 JOptionPane.showMessageDialog(null,"Couldnt display Doctor Details !"); 
                
            }
        
        
    }
        
        
    }//GEN-LAST:event_comboItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientHome3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientHome3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientHome3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientHome3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientHome3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JComboBox combo;
    private javax.swing.JButton insert_into_table;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextArea jOther;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox jSymptom1;
    private javax.swing.JComboBox jSymptom2;
    private javax.swing.JComboBox jSymptom3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

   
}
